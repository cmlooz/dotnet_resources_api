apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ms-sql-server-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet-resources-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dotnet-resources-api
  template:
    metadata:
      labels:
        app: dotnet-resources-api
    spec:
      containers:
        - name: ms-sql-server-container
          image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: "HDLCrin8*"
            - name: MSSQL_PID
              value: Express
          ports:
            - containerPort: 1433
        - name: dotnet-resources-api-container
          image: jcortizs/dotnet_resources_api
          env:
            - name: DBServer
              value: localhost
            #- name: ms-sql-server
            #  value: "ms-sql-server-service"
            - name: ConnectionStrings__DefaultConnection
              value: "Server=tcp:localhost,1433;Database=resources_db;Trusted_Connection=False;TrustServerCertificate=True;MultipleActiveResultSets=true;User ID=sa;Password=HDLCrin8*;"
          ports:
            - containerPort: 80
      volumes:
        - name: ms-sql-server-pvolume
          persistentVolumeClaim:
            claimName: ms-sql-server-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: dotnet-resources-api-service
spec:
  selector:
    app: dotnet-resources-api
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 80
  type: LoadBalancer
